<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.competition.education.mapper.UsersMapper">
    
    <resultMap type="Users" id="UsersResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="school"    column="school"    />
        <result property="role"    column="role"    />
        <result property="evaluationScope"    column="evaluation_scope"    />
        <result property="username"    column="username"    />
        <result property="password"    column="password"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="groupId"    column="group_id"    />
    </resultMap>

    <resultMap id="UsersTbGroupResult" type="Users" extends="UsersResult">
        <collection property="tbGroupList" ofType="TbGroup" column="id" select="selectTbGroupList" />
    </resultMap>

    <resultMap type="TbGroup" id="TbGroupResult">
        <result property="id"    column="id"    />
        <result property="groupName"    column="group_name"    />
    </resultMap>

    <sql id="selectUsersVo">
        select id, name, school, role, evaluation_scope, username, password, create_time, update_by, update_time, create_by, group_id from tb_users
    </sql>

    <select id="selectUsersList" parameterType="Users" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="school != null  and school != ''"> and school like concat('%', #{school}, '%')</if>
            <if test="role != null "> and role = #{role}</if>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="groupId != null "> and group_id = #{groupId}</if>
        </where>
    </select>
    
    <select id="selectUsersById" parameterType="Long" resultMap="UsersTbGroupResult">
        select id, name, school, role, evaluation_scope, username, password, create_time, update_by, update_time, create_by, group_id
        from tb_users
        where id = #{id}
    </select>

    <select id="selectTbGroupList" resultType="TbGroup" resultMap="TbGroupResult">
        select id, group_name
        from tb_group
        where id = #{id}
    </select>

    <insert id="insertUsers" parameterType="Users" useGeneratedKeys="true" keyProperty="id">
        insert into tb_users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="school != null">school,</if>
            <if test="role != null">role,</if>
            <if test="evaluationScope != null">evaluation_scope,</if>
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="groupId != null">group_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="school != null">#{school},</if>
            <if test="role != null">#{role},</if>
            <if test="evaluationScope != null">#{evaluationScope},</if>
            <if test="username != null">#{username},</if>
            <if test="password != null">#{password},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="groupId != null">#{groupId},</if>
         </trim>
    </insert>

    <update id="updateUsers" parameterType="Users">
        update tb_users
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="school != null">school = #{school},</if>
            <if test="role != null">role = #{role},</if>
            <if test="evaluationScope != null">evaluation_scope = #{evaluationScope},</if>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="groupId != null">group_id = #{groupId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUsersById" parameterType="Long">
        delete from tb_users where id = #{id}
    </delete>

    <delete id="deleteUsersByIds" parameterType="String">
        delete from tb_users where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteTbGroupByIds" parameterType="String">
        delete from tb_group where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteTbGroupById" parameterType="Long">
        delete from tb_group where id = #{id}
    </delete>

    <insert id="batchTbGroup">
        insert into tb_group( id, group_name) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.groupName})
        </foreach>
    </insert>
</mapper>